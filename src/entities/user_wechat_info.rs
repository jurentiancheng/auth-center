//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.12

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "user_wechat_info")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i64,
    #[sea_orm(unique)]
    pub union_id: Option<String>,
    pub wechat_open_id: Option<String>,
    pub mini_open_id: Option<String>,
    pub nickname: Option<String>,
    pub language: Option<String>,
    pub subscribe: Option<i8>,
    pub head_img_url: Option<String>,
    pub subscribe_time: Option<i64>,
    pub remark: Option<String>,
    pub group_id: Option<i32>,
    pub tag_ids: Option<Json>,
    pub subscribe_scene: Option<String>,
    pub qr_scene: Option<String>,
    pub qr_scene_str: Option<String>,
    pub app_id: Option<String>,
    pub app_type: Option<String>,
    #[sea_orm(default_value = 0, nullable)]
    pub is_del: Option<i8>,
    pub create_time: Option<DateTime>,
    pub update_time: Option<DateTime>,
    #[sea_orm(default_value = 0, nullable)]
    pub create_by: Option<i64>,
    #[sea_orm(default_value = 0, nullable)]
    pub update_by: Option<i64>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
