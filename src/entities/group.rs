//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.12

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "group")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub code: Option<String>,
    pub parent_code: Option<String>,
    pub name: String,
    pub r#type: String,
    pub description: Option<String>,
    pub application: String,
    pub org_code: Option<String>,
    pub extra: Option<Json>,
    pub remark: Option<String>,
    pub path: Option<String>,
    #[sea_orm(default_value = 0, nullable)]
    pub is_del: Option<i8>,
    pub create_time: Option<DateTime>,
    pub update_time: Option<DateTime>,
    #[sea_orm(default_value = 0, nullable)]
    pub create_by: Option<i64>,
    #[sea_orm(default_value = 0, nullable)]
    pub update_by: Option<i64>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
